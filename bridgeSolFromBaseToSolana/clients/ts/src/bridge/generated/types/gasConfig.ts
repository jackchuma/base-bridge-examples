/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type GasConfig = {
  /** Scaling factor applied when converting (gas_per_call * base_fee) into lamports */
  gasCostScaler: bigint;
  /** Decimal precision for the gas cost scaler (denominator) */
  gasCostScalerDp: bigint;
  /** Account that receives gas fees collected on Solana */
  gasFeeReceiver: Address;
  /** Amount of gas per Solana --> Base message */
  gasPerCall: bigint;
};

export type GasConfigArgs = {
  /** Scaling factor applied when converting (gas_per_call * base_fee) into lamports */
  gasCostScaler: number | bigint;
  /** Decimal precision for the gas cost scaler (denominator) */
  gasCostScalerDp: number | bigint;
  /** Account that receives gas fees collected on Solana */
  gasFeeReceiver: Address;
  /** Amount of gas per Solana --> Base message */
  gasPerCall: number | bigint;
};

export function getGasConfigEncoder(): FixedSizeEncoder<GasConfigArgs> {
  return getStructEncoder([
    ['gasCostScaler', getU64Encoder()],
    ['gasCostScalerDp', getU64Encoder()],
    ['gasFeeReceiver', getAddressEncoder()],
    ['gasPerCall', getU64Encoder()],
  ]);
}

export function getGasConfigDecoder(): FixedSizeDecoder<GasConfig> {
  return getStructDecoder([
    ['gasCostScaler', getU64Decoder()],
    ['gasCostScalerDp', getU64Decoder()],
    ['gasFeeReceiver', getAddressDecoder()],
    ['gasPerCall', getU64Decoder()],
  ]);
}

export function getGasConfigCodec(): FixedSizeCodec<GasConfigArgs, GasConfig> {
  return combineCodec(getGasConfigEncoder(), getGasConfigDecoder());
}
